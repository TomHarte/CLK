name: Build
on: [pull_request]
jobs:

  build-mac-xcodebuild:
    name: Mac UI / xcodebuild / ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest] #[macos-13, macos-14, macos-15]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: Make
      working-directory: OSBindings/Mac
      run: |
        xcodebuild -downloadComponent MetalToolchain
        xcodebuild CODE_SIGN_IDENTITY=-

  build-sdl-cmake:
    name: SDL UI / cmake / ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install dependencies
      shell: bash
      run: |
        case $RUNNER_OS in
          Linux)
            sudo apt-get --allow-releaseinfo-change update
            sudo apt-get --fix-missing install cmake gcc-10 libsdl2-dev
            ;;
          macOS)
            brew uninstall cmake
            brew install cmake sdl2
            ;;
        esac
    - name: Make
      shell: bash
      run: |
        case $RUNNER_OS in
          Linux)
            jobs=$(nproc --all)
            ;;
          macOS)
            jobs=$(sysctl -n hw.activecpu)
            ;;
          *)
            jobs=1
        esac
        cmake -S. -Bbuild -DCLK_UI=SDL -DCMAKE_BUILD_TYPE=Release
        cmake --build build -v -j"$jobs"

  build-sdl-scons:
    name: SDL UI / scons / ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install dependencies
      shell: bash
      run: |
        case $RUNNER_OS in
          Linux)
            sudo apt-get --allow-releaseinfo-change update
            sudo apt-get --fix-missing install gcc-10 libsdl2-dev scons
            ;;
          macOS)
            brew install scons sdl2
            ;;
        esac
    - name: Make
      working-directory: OSBindings/SDL
      shell: bash
      run: |
        case $RUNNER_OS in
          Linux)
            jobs=$(nproc --all)
            ;;
          macOS)
            jobs=$(sysctl -n hw.activecpu)
            ;;
          *)
            jobs=1
        esac
        scons -j"$jobs"

  build-qt5:
    name: Qt 5 / ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install dependencies
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        archives: 'qtbase qtmultimedia qtx11extras icu'
    - name: Make
      working-directory: OSBindings/Qt
      shell: bash
      run: |
        qmake -o Makefile clksignal.pro
        make

#  build-qt6:
#    name: Qt 6 / ${{ matrix.os }}
#    strategy:
#      matrix:
#        os: [ubuntu-latest]
#    runs-on: ${{ matrix.os }}
#    steps:
#    - name: Checkout
#      uses: actions/checkout@v4
#    - name: Install dependencies
#      uses: jurplel/install-qt-action@v4
#      with:
#        version: '6.8'
#        archives: qtbase
#    - name: Make
#      working-directory: OSBindings/Qt
#      shell: bash
#      run: |
#        qmake -o Makefile clksignal.pro
#        make
